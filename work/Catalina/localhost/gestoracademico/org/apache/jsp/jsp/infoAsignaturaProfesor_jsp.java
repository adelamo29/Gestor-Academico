/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.80
 * Generated at: 2023-12-10 10:27:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import java.lang.Math;
import com.google.gson.Gson;
import gestoracademico.Usuario;
import gestoracademico.Asignatura;
import gestoracademico.DBManager;

public final class infoAsignaturaProfesor_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/jsp/barraSuperiorProf.jsp", Long.valueOf(1700389911043L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("gestoracademico.Asignatura");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.google.gson.Gson");
    _jspx_imports_classes.add("gestoracademico.Usuario");
    _jspx_imports_classes.add("java.lang.Math");
    _jspx_imports_classes.add("gestoracademico.DBManager");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("    <head>\r\n");
      out.write("        <meta charset=\"UTF-8\">\r\n");
      out.write("        <title> AMIUP: Recomendador </title>\r\n");
      out.write("        <link href=\"");
      out.print( request.getContextPath() );
      out.write("/VISUAL/inicio.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("        <link href=\"");
      out.print( request.getContextPath() );
      out.write("/VISUAL/barraSuperior.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("        <link href=\"");
      out.print( request.getContextPath() );
      out.write("/VISUAL/estudiante.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("        <script src=\"https://d3js.org/d3.v6.min.js\"></script>\r\n");
      out.write("        <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\r\n");
      out.write("    </head>\r\n");
      out.write("    <body>\r\n");
      out.write("\r\n");
      out.write("        ");
 Usuario usuario = new Usuario();
        usuario= (Usuario)session.getAttribute("Usuario"); 
      out.write("\r\n");
      out.write("\r\n");
      out.write("        ");
 String nombre_asignatura = request.getParameter("asignatura");
        
        Gson gson = new Gson();
        
      out.write("\r\n");
      out.write("\r\n");
      out.write("        ");
 List<Asignatura> notaHistTitulacion = (List<Asignatura>) request.getAttribute("NOTA MEDIA POR ANIO TITULACION");  
        
        String jsonNotaHistTitulacion = gson.toJson(notaHistTitulacion);
        
      out.write("\r\n");
      out.write("        \r\n");
      out.write("        ");
 List<Asignatura> participacionHistTitulacion = (List<Asignatura>) request.getAttribute("PARTICIPACION MEDIA POR ANIO TITULACION");
        
        String jsonParticipacionHistTitulacion = gson.toJson(participacionHistTitulacion);    
                    
        
      out.write("\r\n");
      out.write("        ");
 List<Asignatura> asistenciaHistTitulacion = (List<Asignatura>) request.getAttribute("ASISTENCIA MEDIA POR ANIO TITULACION"); 
                    
        String jsonAsistenciaHistTitulacion = gson.toJson(asistenciaHistTitulacion); 
                    
        
      out.write("\r\n");
      out.write("\r\n");
      out.write("        ");
 Asignatura asignaturaClick = new Asignatura();
        asignaturaClick = (Asignatura)request.getAttribute("Asignatura click");

        String jsonAsignaturaClick = gson.toJson(asignaturaClick);
        
      out.write("\r\n");
      out.write("\r\n");
      out.write("        ");
 List<String> notas = (List<String>) request.getAttribute("NOTAS"); 
        String jsonnotas = gson.toJson(notas);

        List<String> asistencias = (List<String>) request.getAttribute("ASISTENCIAS"); 
        String jsonasistencias = gson.toJson(asistencias);

        List<String> participaciones = (List<String>) request.getAttribute("PARTICIPACIONES"); 
        String jsonparticipaciones = gson.toJson(participaciones);

        List<Asignatura> notasTitulaciones = (List<Asignatura>) request.getAttribute("notasTitulaciones"); 
        String jsonnotasTitulaciones = gson.toJson(notasTitulaciones);

        List<Asignatura> asistenciaTitulaciones = (List<Asignatura>) request.getAttribute("asistenciaTitulaciones"); 
        String jsonasistenciaTitulaciones = gson.toJson(asistenciaTitulaciones);

        List<Asignatura> participacionTitulaciones = (List<Asignatura>) request.getAttribute("participacionTitulaciones"); 
        String jsonparticiparTitulaciones = gson.toJson(participacionTitulaciones);
        
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <div>");
      out.write("<nav class=\"barraSuperior\">\r\n");
      out.write("    <ul>\r\n");
      out.write("        ");
      out.write("\r\n");
      out.write("        <li>\r\n");
      out.write("            <div class=\"dropdown\">\r\n");
      out.write("                <p>");
      out.print(usuario.getNombre());
      out.write("</p>\r\n");
      out.write("                <div class=\"dropdown-content\">\r\n");
      out.write("                    <a href=\"");
      out.print( request.getContextPath() );
      out.write("/profesor\">Pedir Tutoria</a><br>\r\n");
      out.write("                    <a href=\"");
      out.print( request.getContextPath() );
      out.write("/profesor\">Mis asignaturas</a><br>\r\n");
      out.write("                    <a href=\"");
      out.print( request.getContextPath() );
      out.write("/profesor\">Introducir Notas</a>\r\n");
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li><a href=\"");
      out.print( request.getContextPath() );
      out.write("/profesor\">Inicio</a></li>\r\n");
      out.write("        <li class=\"izq\"> AMIUP </li>\r\n");
      out.write("        <li>\r\n");
      out.write("            <form class=\"buscar\" action=\"busquedaEstudiante\" method=\"get\">\r\n");
      out.write("                <input id=\"idEst\" type=\"text\" placeholder=\"Nombre alumno\" name=\"nombreEst\">\r\n");
      out.write("                <input id=\"btnBuscar\" type=\"submit\" value=\"Buscar\">\r\n");
      out.write("            </form>\r\n");
      out.write("        </li>\r\n");
      out.write("    </ul>\r\n");
      out.write("</nav>");
      out.write(" </div>\r\n");
      out.write("        \r\n");
      out.write("        <div class=\"principalPrueba\">\r\n");
      out.write("            <div class=\"padrePrueba\">\r\n");
      out.write("                <h2>Datos Historicos Asignatura</h2>\r\n");
      out.write("                \r\n");
      out.write("                <div class=\"hijoPrueba\">\r\n");
      out.write("                    <canvas id=\"notas\"></canvas>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <div class=\"hijoPrueba\">\r\n");
      out.write("                    <canvas id=\"asistencia\"></canvas>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <div class=\"hijoPrueba\">\r\n");
      out.write("                    <canvas id=\"participacion\"></canvas>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"padrePrueba\" id=\"centro\">\r\n");
      out.write("                <h2 id=\"tituloCentro\">");
      out.print(nombre_asignatura);
      out.write("</h2>\r\n");
      out.write("                \r\n");
      out.write("                <div class=\"hijoPrueba\">\r\n");
      out.write("                    <canvas id=\"notasAsig\"></canvas>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <div class=\"hijoPrueba\">\r\n");
      out.write("                    <canvas id=\"asistenciaAsig\"></canvas>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <div class=\"hijoPrueba\">\r\n");
      out.write("                    <canvas id=\"participacionAsig\"></canvas>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"padrePrueba\" >\r\n");
      out.write("                <h2>Comparativa Titulaciones</h2>\r\n");
      out.write("                <div class=\"hijoPrueba\">\r\n");
      out.write("                    <canvas id=\"notasTitulacion\"></canvas>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <div class=\"hijoPrueba\">\r\n");
      out.write("                    <canvas id=\"asisTitulacion\"></canvas>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                <div class=\"hijoPrueba\">\r\n");
      out.write("                    <canvas id=\"parTitulacion\"></canvas>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("        <script>\r\n");
      out.write("            \r\n");
      out.write("            //GRAFICO DE BARRAS QUE MUESTRA LA NOTA MEDIA A LO LARGO DE LOS AÑOS\r\n");
      out.write("            document.addEventListener(\"DOMContentLoaded\", function () {\r\n");
      out.write("                var notaHistTitulacion = '");
      out.print( jsonNotaHistTitulacion );
      out.write("';\r\n");
      out.write("\r\n");
      out.write("                var datosNotas = JSON.parse(notaHistTitulacion);\r\n");
      out.write("                var anios = [];\r\n");
      out.write("                var notas = []; \r\n");
      out.write("                \r\n");
      out.write("                for (var i = 0; i < datosNotas.length; i++) {\r\n");
      out.write("                    var fecha = datosNotas[i].fecha;\r\n");
      out.write("                    anios.push(fecha);\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                for (var i = 0; i < datosNotas.length; i++) {\r\n");
      out.write("                    var nota = datosNotas[i].nota_media;\r\n");
      out.write("                    notas.push(nota);\r\n");
      out.write("                }\r\n");
      out.write("                \r\n");
      out.write("                var data = {\r\n");
      out.write("                    labels: anios,\r\n");
      out.write("                    datasets: [{\r\n");
      out.write("                        label: 'Nota media por año',\r\n");
      out.write("                        backgroundColor: 'rgba(54, 162, 235, 0.6)',\r\n");
      out.write("                        borderColor: 'rgba(54, 162, 235, 1)',\r\n");
      out.write("                        borderWidth: 1,\r\n");
      out.write("                        data: notas,\r\n");
      out.write("                    }]\r\n");
      out.write("                };\r\n");
      out.write("\r\n");
      out.write("                var options = {\r\n");
      out.write("                    responsive: true,\r\n");
      out.write("                    maintainAspectRatio: false,\r\n");
      out.write("                    scales: {\r\n");
      out.write("                        y: {\r\n");
      out.write("                            beginAtZero: true\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                };\r\n");
      out.write("\r\n");
      out.write("                var ctx = document.getElementById('notas').getContext('2d');\r\n");
      out.write("                var myChart = new Chart(ctx, {\r\n");
      out.write("                    type: 'bar',\r\n");
      out.write("                    data: data,\r\n");
      out.write("                    options: options\r\n");
      out.write("                });\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            //GRAFICO DE BARRAS QUE MUESTRA LA ASISTENCIA MEDIA A LO LARGO DE LOS AÑOS\r\n");
      out.write("            document.addEventListener(\"DOMContentLoaded\", function () {\r\n");
      out.write("                var asistenciaHistTitulacion = '");
      out.print( jsonAsistenciaHistTitulacion );
      out.write("';\r\n");
      out.write("\r\n");
      out.write("                var datosAsistencia = JSON.parse(asistenciaHistTitulacion);\r\n");
      out.write("                var anios = [];\r\n");
      out.write("                var asistencia = [];\r\n");
      out.write("                \r\n");
      out.write("                for (var i = 0; i < datosAsistencia.length; i++) {\r\n");
      out.write("                    var fecha = datosAsistencia[i].fecha;\r\n");
      out.write("                    anios.push(fecha);\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                for (var i = 0; i < datosAsistencia.length; i++) {\r\n");
      out.write("                    var asistenciaNota = datosAsistencia[i].asistencia_media;\r\n");
      out.write("                    asistencia.push(asistenciaNota);\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                var data = {\r\n");
      out.write("                    labels: anios,\r\n");
      out.write("                    datasets: [{\r\n");
      out.write("                        label: 'Asitencia media por año',\r\n");
      out.write("                        backgroundColor: 'rgba(54, 162, 235, 0.6)',\r\n");
      out.write("                        borderColor: 'rgba(54, 162, 235, 1)',\r\n");
      out.write("                        borderWidth: 1,\r\n");
      out.write("                        data: asistencia,\r\n");
      out.write("                    }]\r\n");
      out.write("                };\r\n");
      out.write("\r\n");
      out.write("                var options = {\r\n");
      out.write("                    responsive: true,\r\n");
      out.write("                    maintainAspectRatio: false,\r\n");
      out.write("                    scales: {\r\n");
      out.write("                        y: {\r\n");
      out.write("                            beginAtZero: true\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                };\r\n");
      out.write("\r\n");
      out.write("                var ctx = document.getElementById('asistencia').getContext('2d');\r\n");
      out.write("                var myChart = new Chart(ctx, {\r\n");
      out.write("                    type: 'bar',\r\n");
      out.write("                    data: data,\r\n");
      out.write("                    options: options\r\n");
      out.write("                });\r\n");
      out.write("            });\r\n");
      out.write("            \r\n");
      out.write("            //GRAFICO DE BARRAS QUE MUESTRA LA PARTICIPACION MEDIA A LO LARGO DE LOS AÑOS\r\n");
      out.write("            document.addEventListener(\"DOMContentLoaded\", function () {\r\n");
      out.write("                var participacionHistTitulacion = '");
      out.print( jsonParticipacionHistTitulacion );
      out.write("';\r\n");
      out.write("\r\n");
      out.write("                var datosParticipacion = JSON.parse(participacionHistTitulacion);\r\n");
      out.write("                var anios = [];\r\n");
      out.write("                var participacion = [];\r\n");
      out.write("                \r\n");
      out.write("                \r\n");
      out.write("                for (var i = 0; i < datosParticipacion.length; i++) {\r\n");
      out.write("                    var fecha = datosParticipacion[i].fecha;\r\n");
      out.write("                    anios.push(fecha);\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                for (var i = 0; i < datosParticipacion.length; i++) {\r\n");
      out.write("                    var participacionNota = datosParticipacion[i].participacion_media;\r\n");
      out.write("                    participacion.push(participacionNota);\r\n");
      out.write("                }\r\n");
      out.write("              \r\n");
      out.write("                var data = {\r\n");
      out.write("                    labels: anios,\r\n");
      out.write("                    datasets: [{\r\n");
      out.write("                        label: 'Participacion media por año',\r\n");
      out.write("                        backgroundColor: 'rgba(54, 162, 235, 0.6)',\r\n");
      out.write("                        borderColor: 'rgba(54, 162, 235, 1)',\r\n");
      out.write("                        borderWidth: 1,\r\n");
      out.write("                        data: participacion,\r\n");
      out.write("                    }]\r\n");
      out.write("                };\r\n");
      out.write("\r\n");
      out.write("                var options = {\r\n");
      out.write("                    responsive: true,\r\n");
      out.write("                    maintainAspectRatio: false,\r\n");
      out.write("                    scales: {\r\n");
      out.write("                        y: {\r\n");
      out.write("                            beginAtZero: true\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                };\r\n");
      out.write("\r\n");
      out.write("                var ctx = document.getElementById('participacion').getContext('2d');\r\n");
      out.write("                var myChart = new Chart(ctx, {\r\n");
      out.write("                    type: 'bar',\r\n");
      out.write("                    data: data,\r\n");
      out.write("                    options: options\r\n");
      out.write("                });\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            //INICIO GRAFICO POLARAREA NOTAS\r\n");
      out.write("            document.addEventListener(\"DOMContentLoaded\", function () {\r\n");
      out.write("                //var notasJson = '");
      out.print( jsonnotas );
      out.write("';\r\n");
      out.write("\r\n");
      out.write("                //var notas = JSON.parse(notasJson);\r\n");
      out.write("                //Notas generadas a parte para que los graficos salgan mejor\r\n");
      out.write("                var notas = [\r\n");
      out.write("                    9.88, 4.72, 6.04, 3.91, 7.14, 3.12, 9.64, 1.33, 1.66, 3.09,\r\n");
      out.write("                    4.82, 7.08, 6.02, 3.54, 7.46, 0.59, 0.13, 8.76, 8.41, 6.14,\r\n");
      out.write("                    5.21, 3.38, 2.12, 1.34, 9.74, 5.08, 5.58, 4.84, 9.98, 2.53,\r\n");
      out.write("                    4.12, 7.13, 3.25, 9.13, 0.71, 7.04, 0.83, 1.98, 5.32, 0.46,\r\n");
      out.write("                    8.46, 2.84, 7.77, 5.71, 9.68, 4.68, 7.65, 5.75, 6.88, 8.84,\r\n");
      out.write("                    8.07, 9.11, 3.59, 4.69, 7.81, 0.94, 7.59, 7.01, 4.75, 2.71,\r\n");
      out.write("                    8.99, 8.03, 2.85, 4.91, 5.44, 2.21, 1.09, 3.89, 7.02, 4.72,\r\n");
      out.write("                    2.21, 3.23, 8.56, 7.41, 7.06, 0.36, 4.41, 3.84, 3.05, 2.67,\r\n");
      out.write("                    3.53, 7.21, 2.62, 1.84, 9.56, 1.94, 2.39, 4.33, 5.29, 4.18,\r\n");
      out.write("                    9.65, 6.71, 6.82, 1.05, 3.93, 1.52, 7.88, 6.45, 9.19, 5.28\r\n");
      out.write("                ];\r\n");
      out.write("\r\n");
      out.write("                //Array para q solo salgan 10 medidas\r\n");
      out.write("                var rangos = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n");
      out.write("\r\n");
      out.write("                //con esto ordenamos los rangos para que luego se muestren directamente, si no se hace los rangos se crean segun van saliendo las notas\r\n");
      out.write("                var numAlumnosRango = {};\r\n");
      out.write("                rangos.forEach(function (rango) {\r\n");
      out.write("                    numAlumnosRango[rango] = 0;\r\n");
      out.write("                });\r\n");
      out.write("\r\n");
      out.write("                //para cada nota del array comprobamos en que rango esta y se suma 1 de frecuencia en ese rango\r\n");
      out.write("                notas.forEach(function (nota) {\r\n");
      out.write("                    for (var i = 0; i < rangos.length - 1; i++) {\r\n");
      out.write("                        if (nota >= rangos[i] && nota < rangos[i + 1]) {\r\n");
      out.write("                            numAlumnosRango[rangos[i]]++;\r\n");
      out.write("                            break;\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("\r\n");
      out.write("                //colores para cada rango\r\n");
      out.write("                var colores = [\r\n");
      out.write("                    'rgba(255, 99, 132, 0.5)',\r\n");
      out.write("                    'rgba(54, 162, 235, 0.5)',\r\n");
      out.write("                    'rgba(255, 206, 86, 0.5)',\r\n");
      out.write("                    'rgba(75, 192, 192, 0.5)',\r\n");
      out.write("                    'rgba(153, 102, 255, 0.5)',\r\n");
      out.write("                    'rgba(255, 159, 64, 0.5)',\r\n");
      out.write("                    'rgba(255, 0, 0, 0.5)',\r\n");
      out.write("                    'rgba(0, 255, 0, 0.5)',\r\n");
      out.write("                    'rgba(0, 0, 255, 0.5)',\r\n");
      out.write("                    'rgba(128, 128, 0, 0.5)'\r\n");
      out.write("                ];\r\n");
      out.write("\r\n");
      out.write("                //Diagrama notas asignatura en año impartido por profesor\r\n");
      out.write("                var ctx = document.getElementById('notasAsig').getContext('2d');\r\n");
      out.write("\r\n");
      out.write("                var polarChart = new Chart(ctx, {\r\n");
      out.write("                    type: 'polarArea',\r\n");
      out.write("                    data: {\r\n");
      out.write("                        labels: rangos.map(function (rango) {\r\n");
      out.write("                            return rango + '-' + (rango + 1);\r\n");
      out.write("                        }),\r\n");
      out.write("                        datasets: [{\r\n");
      out.write("                            label: 'Numero de Alumnos',\r\n");
      out.write("                            data: rangos.map(function (rango) {\r\n");
      out.write("                                return numAlumnosRango[rango];\r\n");
      out.write("                            }),\r\n");
      out.write("                            backgroundColor: colores,\r\n");
      out.write("                            borderColor: colores,\r\n");
      out.write("                            borderWidth: 1\r\n");
      out.write("                        }]\r\n");
      out.write("                    },\r\n");
      out.write("                    options: {\r\n");
      out.write("                        scale: {\r\n");
      out.write("                            ticks: {\r\n");
      out.write("                                beginAtZero: true\r\n");
      out.write("                            }\r\n");
      out.write("                        },\r\n");
      out.write("                        plugins: {\r\n");
      out.write("                        title: {\r\n");
      out.write("                            display: true,\r\n");
      out.write("                            text: 'Notas de la asignatura'\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            //FIN GRAFICO POLAR AREA NOTAS\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            //INICIO GRAFICO POLARAREA ASISTENCIA\r\n");
      out.write("            document.addEventListener(\"DOMContentLoaded\", function () {\r\n");
      out.write("                //si hubiese mas datos en la base de datos habria que hacer lo que se hace en el grafico de notas (actualmente esta comentado)\r\n");
      out.write("                //Notas generadas a parte para que los graficos salgan mejor\r\n");
      out.write("                var asistencias = [\r\n");
      out.write("                    '3', '18', '12', '6', '8', '14', '21', '9', '20', '11',\r\n");
      out.write("                    '15', '2', '5', '17', '7', '19', '10', '22', '4', '16',\r\n");
      out.write("                    '1', '8', '13', '4', '18', '7', '11', '20', '9', '6',\r\n");
      out.write("                    '17', '22', '3', '21', '7', '15', '2', '14', '23', '19',\r\n");
      out.write("                    '15', '6', '18', '2', '7', '14', '21', '19', '8', '3',\r\n");
      out.write("                    '13', '20', '10', '5', '22', '9', '16', '3', '15', '10',\r\n");
      out.write("                    '21', '4', '18', '7', '13', '8', '5', '10', '19', '9',\r\n");
      out.write("                    '21', '15', '10', '6', '18', '12', '5', '17', '23', '13',\r\n");
      out.write("                ];\r\n");
      out.write("\r\n");
      out.write("                //Array para q solo salgan 10 medidas\r\n");
      out.write("                var rangos = [0, 3, 6, 9, 12, 15, 18, 21, 23];\r\n");
      out.write("\r\n");
      out.write("                //con esto ordenamos los rangos para que luego se muestren directamente, si no se hace los rangos se crean segun van saliendo las notas\r\n");
      out.write("                var numAlumnosRango = {};\r\n");
      out.write("                rangos.forEach(function (rango) {\r\n");
      out.write("                    numAlumnosRango[rango] = 0;\r\n");
      out.write("                });\r\n");
      out.write("\r\n");
      out.write("                //para cada nota del array comprobamos en que rango esta y se suma 1 de frecuencia en ese rango\r\n");
      out.write("                asistencias.forEach(function (asistencia) {\r\n");
      out.write("                    for (var i = 0; i < rangos.length - 1; i++) {\r\n");
      out.write("                        if (asistencia >= rangos[i] && asistencia < rangos[i + 1]) {\r\n");
      out.write("                            numAlumnosRango[rangos[i]]++;\r\n");
      out.write("                            break;\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("\r\n");
      out.write("                //colores para cada rango\r\n");
      out.write("                var colores = [\r\n");
      out.write("                    'rgba(255, 99, 132, 0.5)',\r\n");
      out.write("                    'rgba(54, 162, 235, 0.5)',\r\n");
      out.write("                    'rgba(255, 206, 86, 0.5)',\r\n");
      out.write("                    'rgba(75, 192, 192, 0.5)',\r\n");
      out.write("                    'rgba(153, 102, 255, 0.5)',\r\n");
      out.write("                    'rgba(255, 159, 64, 0.5)',\r\n");
      out.write("                    'rgba(255, 0, 0, 0.5)',\r\n");
      out.write("                    'rgba(0, 255, 0, 0.5)',\r\n");
      out.write("                    'rgba(0, 0, 255, 0.5)',\r\n");
      out.write("                    'rgba(128, 128, 0, 0.5)'\r\n");
      out.write("                ];\r\n");
      out.write("\r\n");
      out.write("                //Diagrama notas asignatura en año impartido por profesor\r\n");
      out.write("                var ctx = document.getElementById('asistenciaAsig').getContext('2d');\r\n");
      out.write("\r\n");
      out.write("                var polarChart = new Chart(ctx, {\r\n");
      out.write("                    type: 'polarArea',\r\n");
      out.write("                    data: {\r\n");
      out.write("                        labels: rangos.map(function (rango) {\r\n");
      out.write("                            return rango + '-' + (rango + 3);\r\n");
      out.write("                        }),\r\n");
      out.write("                        datasets: [{\r\n");
      out.write("                            label: 'Numero de Alumnos',\r\n");
      out.write("                            data: rangos.map(function (rango) {\r\n");
      out.write("                                return numAlumnosRango[rango];\r\n");
      out.write("                            }),\r\n");
      out.write("                            backgroundColor: colores,\r\n");
      out.write("                            borderColor: colores,\r\n");
      out.write("                            borderWidth: 1\r\n");
      out.write("                        }]\r\n");
      out.write("                    },\r\n");
      out.write("                    options: {\r\n");
      out.write("                        scale: {\r\n");
      out.write("                            ticks: {\r\n");
      out.write("                                beginAtZero: true\r\n");
      out.write("                            }\r\n");
      out.write("                        },\r\n");
      out.write("                        plugins: {\r\n");
      out.write("                        title: {\r\n");
      out.write("                            display: true,\r\n");
      out.write("                            text: 'Asistencia de la asignatura'\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            //FIN GRAFICO POLAR AREA ASISTENCIA\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            \r\n");
      out.write("            //INICIO GRAFICO POLARAREA ASISTENCIA\r\n");
      out.write("            document.addEventListener(\"DOMContentLoaded\", function () {\r\n");
      out.write("                //si hubiese mas datos en la base de datos habria que hacer lo que se hace en el grafico de notas (actualmente esta comentado)\r\n");
      out.write("                //Notas generadas a parte para que los graficos salgan mejor\r\n");
      out.write("                var participaciones = [\r\n");
      out.write("                    '5.42', '3.78', '7.91', '2.15', '9.23', '4.56', '8.74', '1.98',\r\n");
      out.write("                    '0.64', '6.37', '4.21', '8.95', '2.89', '7.03', '9.62', '1.34',\r\n");
      out.write("                    '3.17', '5.83', '0.49', '9.08', '6.72', '2.46', '7.29', '1.94',\r\n");
      out.write("                    '8.61', '4.35', '6.98', '1.09', '9.50', '0.75', '3.21', '7.96',\r\n");
      out.write("                    '4.59', '2.83', '8.76', '1.28', '9.14', '5.50', '7.83', '0.41',\r\n");
      out.write("                    '6.04', '2.68', '9.31', '1.53', '8.45', '4.12', '7.55', '0.86',\r\n");
      out.write("                    '3.72', '9.39', '5.07', '1.22', '8.07', '6.66', '2.97', '7.20',\r\n");
      out.write("                    '1.66', '4.94', '8.29', '3.45', '9.77', '0.30', '5.69', '7.46',\r\n");
      out.write("                    '2.38', '6.91', '9.85', '1.78', '4.27', '8.52', '0.97', '3.09',\r\n");
      out.write("                    '7.68', '5.14', '2.53', '9.54', '1.41', '6.25', '8.83', '4.80'\r\n");
      out.write("                ]\r\n");
      out.write("\r\n");
      out.write("                //Array para q solo salgan 10 medidas\r\n");
      out.write("                var rangos = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n");
      out.write("\r\n");
      out.write("                //con esto ordenamos los rangos para que luego se muestren directamente, si no se hace los rangos se crean segun van saliendo las notas\r\n");
      out.write("                var numAlumnosRango = {};\r\n");
      out.write("                rangos.forEach(function (rango) {\r\n");
      out.write("                    numAlumnosRango[rango] = 0;\r\n");
      out.write("                });\r\n");
      out.write("\r\n");
      out.write("                //para cada nota del array comprobamos en que rango esta y se suma 1 de frecuencia en ese rango\r\n");
      out.write("                participaciones.forEach(function (participacion) {\r\n");
      out.write("                    for (var i = 0; i < rangos.length - 1; i++) {\r\n");
      out.write("                        if (participacion >= rangos[i] && participacion < rangos[i + 1]) {\r\n");
      out.write("                            numAlumnosRango[rangos[i]]++;\r\n");
      out.write("                            break;\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("\r\n");
      out.write("                //colores para cada rango\r\n");
      out.write("                var colores = [\r\n");
      out.write("                    'rgba(255, 99, 132, 0.5)',\r\n");
      out.write("                    'rgba(54, 162, 235, 0.5)',\r\n");
      out.write("                    'rgba(255, 206, 86, 0.5)',\r\n");
      out.write("                    'rgba(75, 192, 192, 0.5)',\r\n");
      out.write("                    'rgba(153, 102, 255, 0.5)',\r\n");
      out.write("                    'rgba(255, 159, 64, 0.5)',\r\n");
      out.write("                    'rgba(255, 0, 0, 0.5)',\r\n");
      out.write("                    'rgba(0, 255, 0, 0.5)',\r\n");
      out.write("                    'rgba(0, 0, 255, 0.5)',\r\n");
      out.write("                    'rgba(128, 128, 0, 0.5)'\r\n");
      out.write("                ];\r\n");
      out.write("\r\n");
      out.write("                //Diagrama notas asignatura en año impartido por profesor\r\n");
      out.write("                var ctx = document.getElementById('participacionAsig').getContext('2d');\r\n");
      out.write("\r\n");
      out.write("                var polarChart = new Chart(ctx, {\r\n");
      out.write("                    type: 'polarArea',\r\n");
      out.write("                    data: {\r\n");
      out.write("                        labels: rangos.map(function (rango) {\r\n");
      out.write("                            return rango + '-' + (rango + 1);\r\n");
      out.write("                        }),\r\n");
      out.write("                        datasets: [{\r\n");
      out.write("                            label: 'Numero de Alumnos',\r\n");
      out.write("                            data: rangos.map(function (rango) {\r\n");
      out.write("                                return numAlumnosRango[rango];\r\n");
      out.write("                            }),\r\n");
      out.write("                            backgroundColor: colores,\r\n");
      out.write("                            borderColor: colores,\r\n");
      out.write("                            borderWidth: 1\r\n");
      out.write("                        }]\r\n");
      out.write("                    },\r\n");
      out.write("                    options: {\r\n");
      out.write("                        scale: {\r\n");
      out.write("                            ticks: {\r\n");
      out.write("                                beginAtZero: true\r\n");
      out.write("                            }\r\n");
      out.write("                        },\r\n");
      out.write("                        plugins: {\r\n");
      out.write("                        title: {\r\n");
      out.write("                            display: true,\r\n");
      out.write("                            text: 'Participacion de la asignatura'\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            //FIN GRAFICO POLAR AREA PARTICIPACION\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            //GRAFICO COMPARATIVA NOTAS ENTRE TITULACIONES\r\n");
      out.write("            document.addEventListener(\"DOMContentLoaded\", function () {\r\n");
      out.write("                var notaHistTitulaciones = '");
      out.print( jsonnotasTitulaciones );
      out.write("';\r\n");
      out.write("                var notas = JSON.parse(notaHistTitulaciones);\r\n");
      out.write("\r\n");
      out.write("                var titulaciones = [...new Set(notas.map(entry => entry.titulacion))];\r\n");
      out.write("\r\n");
      out.write("                var datasets = titulaciones.map(titulacion => {\r\n");
      out.write("                    var titulacionData = notas.filter(entry => entry.titulacion === titulacion);\r\n");
      out.write("                    var years = titulacionData.map(entry => entry.fecha);\r\n");
      out.write("                    var notaMedia = titulacionData.map(entry => entry.nota_media);\r\n");
      out.write("                    return {\r\n");
      out.write("                        label: titulacion,\r\n");
      out.write("                        data: notaMedia,\r\n");
      out.write("                        borderColor: getRandomColor(),\r\n");
      out.write("                        borderWidth: 3,\r\n");
      out.write("                        fill: false\r\n");
      out.write("                    };\r\n");
      out.write("                });\r\n");
      out.write("                var years = notas.map(entry => entry.fecha);\r\n");
      out.write("                \r\n");
      out.write("                var ctx = document.getElementById('notasTitulacion').getContext('2d');\r\n");
      out.write("                var myChart = new Chart(ctx, {\r\n");
      out.write("                    type: 'line',\r\n");
      out.write("                    data: {\r\n");
      out.write("                        labels: years,  \r\n");
      out.write("                        datasets: datasets\r\n");
      out.write("                    },\r\n");
      out.write("                    options: {\r\n");
      out.write("                        responsive: true,\r\n");
      out.write("                        maintainAspectRatio: false,\r\n");
      out.write("                        scales: {\r\n");
      out.write("                            x: {\r\n");
      out.write("                                type: 'linear',\r\n");
      out.write("                                position: 'bottom'\r\n");
      out.write("                            }\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("\r\n");
      out.write("                function getRandomColor() {\r\n");
      out.write("                    var letters = '0123456789ABCDEF';\r\n");
      out.write("                    var color = '#';\r\n");
      out.write("                    for (var i = 0; i < 6; i++) {\r\n");
      out.write("                        color += letters[Math.floor(Math.random() * 16)];\r\n");
      out.write("                    }\r\n");
      out.write("                    return color;\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            //GRAFICO COMPARATIVA ASISTECNCIA ENTRE TITULACIONES\r\n");
      out.write("            document.addEventListener(\"DOMContentLoaded\", function () {\r\n");
      out.write("                var asistenciaHistTitulaciones = '");
      out.print( jsonasistenciaTitulaciones );
      out.write("';\r\n");
      out.write("                var asistencia = JSON.parse(asistenciaHistTitulaciones);\r\n");
      out.write("                console.log(asistencia);\r\n");
      out.write("                //Creammos array con las titulaciones\r\n");
      out.write("                var titulaciones = [...new Set(asistencia.map(entry => entry.titulacion))]; //hacemos uso de set para crear un conjunto (no puede haber duplicados)\r\n");
      out.write("                                                                                                    //y lo pasamos de nuevo a array con [...]\r\n");
      out.write("                \r\n");
      out.write("                var datasets = titulaciones.map(titulacion => {\r\n");
      out.write("                    var titulacionData = asistencia.filter(entry => entry.titulacion === titulacion); //creamos array que se queda unicamente con los datos que corresponden a la titulacion\r\n");
      out.write("                    var years = titulacionData.map(entry => entry.fecha);//array con las fechas disponibles en la titulacion\r\n");
      out.write("                    var notaMedia = titulacionData.map(entry => entry.asistencia_media);//array con la nota media\r\n");
      out.write("                    return {\r\n");
      out.write("                        label: titulacion,\r\n");
      out.write("                        data: notaMedia,\r\n");
      out.write("                        borderColor: getRandomColor(),\r\n");
      out.write("                        borderWidth: 3,\r\n");
      out.write("                        fill: false //en true se rellenaria el espacio por debajo de la linea\r\n");
      out.write("                    };\r\n");
      out.write("                });\r\n");
      out.write("                var years = asistencia.map(entry => entry.fecha);\r\n");
      out.write("\r\n");
      out.write("                \r\n");
      out.write("                var ctx = document.getElementById('asisTitulacion').getContext('2d');\r\n");
      out.write("                var myChart = new Chart(ctx, {\r\n");
      out.write("                    type: 'line',\r\n");
      out.write("                    data: {\r\n");
      out.write("                        labels: years,  \r\n");
      out.write("                        datasets: datasets\r\n");
      out.write("                    },\r\n");
      out.write("                    options: {\r\n");
      out.write("                        responsive: true,\r\n");
      out.write("                        maintainAspectRatio: false,\r\n");
      out.write("                        scales: {\r\n");
      out.write("                            x: {\r\n");
      out.write("                                type: 'linear',\r\n");
      out.write("                                position: 'bottom'\r\n");
      out.write("                            }\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("\r\n");
      out.write("                \r\n");
      out.write("                function getRandomColor() {\r\n");
      out.write("                    var letters = '0123456789ABCDEF';\r\n");
      out.write("                    var color = '#';\r\n");
      out.write("                    for (var i = 0; i < 6; i++) {\r\n");
      out.write("                        color += letters[Math.floor(Math.random() * 16)];\r\n");
      out.write("                    }\r\n");
      out.write("                    return color;\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            //GRAFICO COMPARATIVA PARTICIPACION ENTRE TITULACIONES\r\n");
      out.write("            document.addEventListener(\"DOMContentLoaded\", function () {\r\n");
      out.write("                var participarHistTitulaciones = '");
      out.print( jsonparticiparTitulaciones );
      out.write("';\r\n");
      out.write("                var participacion = JSON.parse(participarHistTitulaciones);\r\n");
      out.write("                \r\n");
      out.write("                var titulaciones = [...new Set(participacion.map(entry => entry.titulacion))];\r\n");
      out.write("\r\n");
      out.write("                var datasets = titulaciones.map(titulacion => {\r\n");
      out.write("                    var titulacionData = participacion.filter(entry => entry.titulacion === titulacion);\r\n");
      out.write("                    var years = titulacionData.map(entry => entry.fecha);\r\n");
      out.write("                    var notaMedia = titulacionData.map(entry => entry.participacion_media);\r\n");
      out.write("                    return {\r\n");
      out.write("                        label: titulacion,\r\n");
      out.write("                        data: notaMedia,\r\n");
      out.write("                        borderColor: getRandomColor(),\r\n");
      out.write("                        borderWidth: 3,\r\n");
      out.write("                        fill: false\r\n");
      out.write("                    };\r\n");
      out.write("                });\r\n");
      out.write("                var years = participacion.map(entry => entry.fecha);\r\n");
      out.write("\r\n");
      out.write("                var ctx = document.getElementById('parTitulacion').getContext('2d');\r\n");
      out.write("                var myChart = new Chart(ctx, {\r\n");
      out.write("                    type: 'line',\r\n");
      out.write("                    data: {\r\n");
      out.write("                        labels: years, \r\n");
      out.write("                        datasets: datasets\r\n");
      out.write("                    },\r\n");
      out.write("                    options: {\r\n");
      out.write("                        responsive: true,\r\n");
      out.write("                        maintainAspectRatio: false,\r\n");
      out.write("                        scales: {\r\n");
      out.write("                            x: {\r\n");
      out.write("                                type: 'linear',\r\n");
      out.write("                                position: 'bottom'\r\n");
      out.write("                            }\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("\r\n");
      out.write("                \r\n");
      out.write("                function getRandomColor() {\r\n");
      out.write("                    var letters = '0123456789ABCDEF';\r\n");
      out.write("                    var color = '#';\r\n");
      out.write("                    for (var i = 0; i < 6; i++) {\r\n");
      out.write("                        color += letters[Math.floor(Math.random() * 16)];\r\n");
      out.write("                    }\r\n");
      out.write("                    return color;\r\n");
      out.write("\r\n");
      out.write("                    var cont = 0;\r\n");
      out.write("                    \r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        </script>\r\n");
      out.write("        \r\n");
      out.write("    </body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write("    .principalPrueba{\r\n");
      out.write("        display: flex;\r\n");
      out.write("        flex-direction: row;       \r\n");
      out.write("        width: 80%;\r\n");
      out.write("        position: absolute;\r\n");
      out.write("        margin-left: 10%;\r\n");
      out.write("        margin-top: 100px;\r\n");
      out.write("    }\r\n");
      out.write("    .padrePrueba{\r\n");
      out.write("        position: relative;\r\n");
      out.write("        display: flex;\r\n");
      out.write("        width: 30%;\r\n");
      out.write("        flex-direction: column;\r\n");
      out.write("        row-gap: 10px;\r\n");
      out.write("        border: 5px solid black;\r\n");
      out.write("        background-color: rgb(100, 180, 153);\r\n");
      out.write("    } \r\n");
      out.write("\r\n");
      out.write("    .hijoPrueba{\r\n");
      out.write("        display: flex;\r\n");
      out.write("        flex-direction: column;\r\n");
      out.write("        row-gap: 10px;\r\n");
      out.write("        width: 100%;\r\n");
      out.write("        margin-top:50px;\r\n");
      out.write("        text-align: center;\r\n");
      out.write("        justify-content: center;\r\n");
      out.write("        height: 30%;\r\n");
      out.write("    } \r\n");
      out.write("\r\n");
      out.write("    .asignaturaPrueba{\r\n");
      out.write("        background-color: rgb(133, 234, 148);\r\n");
      out.write("        border-radius: 20px;\r\n");
      out.write("        padding: 10px;\r\n");
      out.write("        width: 65%;\r\n");
      out.write("        height: 120px;\r\n");
      out.write("        justify-content: center;\r\n");
      out.write("        text-align: center;\r\n");
      out.write("        margin-left: 15%;\r\n");
      out.write("    } \r\n");
      out.write("\r\n");
      out.write("    .principalPrueba .padrePrueba h2{\r\n");
      out.write("        position: absolute;\r\n");
      out.write("        text-align: center;\r\n");
      out.write("        margin-top: 10px;\r\n");
      out.write("        margin-left: 15%;\r\n");
      out.write("        color: #333;\r\n");
      out.write("    } \r\n");
      out.write("\r\n");
      out.write("    .principalPrueba .padrePrueba .hijoPrueba .asignaturaPrueba .notaPrueba{\r\n");
      out.write("        position:static;\r\n");
      out.write("        border-radius: 20px;\r\n");
      out.write("        background-color: red;\r\n");
      out.write("        margin-top: 13px;\r\n");
      out.write("        width: 100%;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .asignaturaPrueba h3 {\r\n");
      out.write("        padding-top: 20px;\r\n");
      out.write("        color: #333;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .info{\r\n");
      out.write("        padding: 15px 20px;\r\n");
      out.write("        text-align: center;\r\n");
      out.write("        background-color: rgb(133, 234, 148);\r\n");
      out.write("        color: #333;\r\n");
      out.write("        border-radius: 20px;\r\n");
      out.write("    }   \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    #graficoNota_Anio{\r\n");
      out.write("        background-color: white;\r\n");
      out.write("    } \r\n");
      out.write("    #centro{\r\n");
      out.write("        position: relative;\r\n");
      out.write("        display: flex;\r\n");
      out.write("        width: 40%;\r\n");
      out.write("        flex-direction: column;\r\n");
      out.write("        row-gap: 10px;\r\n");
      out.write("        border: 5px solid black;\r\n");
      out.write("    }  \r\n");
      out.write("\r\n");
      out.write("    #tituloCentro{\r\n");
      out.write("        position: relative;\r\n");
      out.write("        text-align: center;\r\n");
      out.write("        margin-top: 10px;\r\n");
      out.write("        margin-left: 0%;\r\n");
      out.write("        color: #333;\r\n");
      out.write("    } \r\n");
      out.write("</style>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
